---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus-server
spec:
  serviceName: prometheus-server-headless
  replicas: 1
  podManagementPolicy: OrderedReady
  template:
    spec:
      containers:
        - name: prometheus-server-configmap-reload
          image: prometheus-server-configmap-reload
          imagePullPolicy: IfNotPresent
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://127.0.0.1:9090/-/reload
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 50Mi
          volumeMounts:
            - name: config
              mountPath: /etc/config
              readOnly: true
        - name: prometheus-server
          image: prometheus-server
          imagePullPolicy: IfNotPresent
          args:
            - --storage.tsdb.retention.time=15d
            - --config.file=/etc/config/prometheus.yml
            - --storage.tsdb.path=/data
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
            - --web.enable-lifecycle
          ports:
            - containerPort: 9090
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 30
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 30
            failureThreshold: 3
            successThreshold: 1
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256m
          volumeMounts:
            - name: config
              mountPath: /etc/config
            - name: data
              mountPath: /data
              subPath: ""
      enableServiceLinks: true
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: prometheus-server
      terminationGracePeriodSeconds: 300
      volumes:
        - name: config
          configMap:
            name: prometheus-server
  volumeClaimTemplates:
    - metadata:
        name: data
        finalizers:
          - kubernetes.io/pvc-protection
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "8Gi"
        storageClassName: my-storage-class
