---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: etcd
spec:
  podManagementPolicy: Parallel
  replicas: 3
  revisionHistoryLimit: 3
  serviceName: etcd-headless
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "2381"
        prometheus.io/scrape: "true"
    spec:
      containers:
        - name: etcd
          image: etcd
          imagePullPolicy: Always
          envFrom:
          - configMapRef:
              name: etcd-env
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ETCD_NAME
              value: "$(MY_POD_NAME)"
            - name: ETCD_ADVERTISE_CLIENT_URLS
              value: "https://$(MY_POD_NAME).etcd-headless.$(NAMESPACE).svc.cluster.local:2379"
            - name: ETCD_INITIAL_ADVERTISE_PEER_URLS
              value: "https://$(MY_POD_NAME).etcd-headless.$(NAMESPACE).svc.cluster.local:2380"
            - name: ETCD_INITIAL_CLUSTER
              value: "etcd-0=https://etcd-0.etcd-headless.$(NAMESPACE).svc.cluster.local:2380,etcd-1=https://etcd-1.etcd-headless.$(NAMESPACE).svc.cluster.local:2380,etcd-2=https://etcd-2.etcd-headless.$(NAMESPACE).svc.cluster.local:2380"
            - name: ETCDCTL_ENDPOINTS
              value: "https://etcd-0.etcd-headless.$(NAMESPACE).svc.cluster.local:2379,https://etcd-1.etcd-headless.$(NAMESPACE).svc.cluster.local:2379,https://etcd-2.etcd-headless.$(NAMESPACE).svc.cluster.local:2379"
            #- name: ETCD_ROOT_PASSWORD
            #  valueFrom:
            #    secretKeyRef:
            #      name: etcd
            #      key: etcd-root-password
            #- name: AUTH_SKIP_TLS
            #  value: "true"
          ports:
            - name: client
              containerPort: 2379
              protocol: TCP
            - name: peer
              containerPort: 2380
              protocol: TCP
            - name: health
              containerPort: 2381
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: 2381
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 2381
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          securityContext:
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: data
              mountPath: /var/lib/etcd
            - name: etcd-client-certs
              mountPath: /certs/client
              readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: etcd
      serviceAccountName: etcd
      securityContext:
        fsGroup: 2711
        runAsUser: 2711
      volumes:
        - name: etcd-client-certs
          secret:
            secretName: etcd-client-tls
            defaultMode: 256
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
        storageClassName: my-storage-class
