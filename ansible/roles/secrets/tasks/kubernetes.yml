- name: create_kubernetes_secrets_dir
  file:
    path: "{{ item }}"
    state: directory
    mode: 0700
  with_items:
    - "{{ kubernetes.secrets_dir }}"
    - "{{ kubernetes.kubeadm.dir }}"
    - "{{ kubernetes.pki.dir }}"
    - "{{ kubernetes.pki.etcd_dir }}"

######
# CA #
######
- name: generate_ca_priv_key
  community.crypto.openssl_privatekey:
    path: "{{ item.key }}"
    size: 2048
  with_items:
    - "{{ kubernetes.pki.ca }}"
    - "{{ kubernetes.pki.front_proxy_ca }}"
    - "{{ kubernetes.pki.etcd }}"

- name: copy_openssl_conf
  template:
    src: openssl.conf.j2
    dest: "{{ item.openssl_conf }}"
    mode: 0400
  vars:
    common_name: "{{ item.common_name }}"
  with_items:
    - "{{ kubernetes.pki.ca }}"
    - "{{ kubernetes.pki.front_proxy_ca }}"
    - "{{ kubernetes.pki.etcd }}"

- name: check_ca_crt_exists
  stat:
    path: "{{ item.crt }}"
  register: ca_crt
  with_items:
    - "{{ kubernetes.pki.ca }}"
    - "{{ kubernetes.pki.front_proxy_ca }}"
    - "{{ kubernetes.pki.etcd }}"

- name: create_ca_crt
  shell: openssl req -x509 -new -nodes -config "{{ item.item.openssl_conf }}" -key "{{ item.item.key }}" -days 3650 -out "{{ item.item.crt }}" -extensions v3_req
  when:
    - item.stat.exists == false
  # reuse the item previously used when cheking if file exist
  with_items:
    - "{{ ca_crt.results }}"

- name: read_kubernetes_ca_crt
  slurp:
    src: "{{ kubernetes.pki.ca.crt }}"
  register: kubernetes_ca_crt

###########
# KUBEADM #
###########
- name: check_kubeadm_token
  stat:
    path: "{{ kubernetes.kubeadm.token }}"
  register: kubeadm_token

- name: create_kubeadm_token
  shell: "echo \"$(openssl rand -hex 3).$(openssl rand -hex 8)\"  > {{ kubernetes.kubeadm.token }}"
  when:
    - kubeadm_token.stat.exists == false

- name: check_kubeadm_token
  stat:
    path: "{{ kubernetes.kubeadm.token }}"
  register: kubeadm_token

- name: create_kubeadm_ca_cert_hash    
  copy:
    content: "{{ kubernetes_ca_crt['content'] | b64decode | spki_fingerprint }}"
    dest: "{{ kubernetes.kubeadm.ca_cert_hash }}"
