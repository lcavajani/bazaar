---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: psp.relaxed
  annotations:
    apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'runtime/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName:  'runtime/default'
    apparmor.security.beta.kubernetes.io/defaultProfileName:  'runtime/default'
spec:
  privileged: false
  # Required to prevent escalations to root.
  allowPrivilegeEscalation: false
  defaultAddCapabilities:
  - NET_BIND_SERVICE
  # This is redundant with non-root + disallow privilege escalation,
  # but we can provide it for defense in depth.
  requiredDropCapabilities:
    - ALL
  # Allow core volume types.
  volumes:
    # Kubernetes Pseudo Volume Types
    - configMap
    - secret
    - emptyDir
    - downwardAPI
    - projected
    - persistentVolumeClaim
    # Networked Storage
    - nfs
    - rbd
    - cephFS
    - glusterfs
    - iscsi
  allowedHostPaths:
    - pathPrefix: /opt/kubernetes-hostpath-volumes
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    # Require the container to run without root privileges.
    rule: 'RunAsAny'
  seLinux:
    # This policy assumes the nodes are using AppArmor rather than SELinux.
    rule: 'RunAsAny'
  supplementalGroups:
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 65535
    rule: 'RunAsAny'
  fsGroup:
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 65535
    rule: 'RunAsAny'
  readOnlyRootFilesystem: false
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: psp:relaxed
rules:
  - apiGroups: ['extensions']
    resources: ['podsecuritypolicies']
    verbs: ['use']
    resourceNames: ['psp.relaxed']          
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: psp-default:relaxed
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: psp:relaxed
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system
